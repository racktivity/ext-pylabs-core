@metadata title = $method.name

\# REST Cloud API DOC - $className

#set $args = ', '.join($method.argNames)
#set $str = '## ' + $className + '.' + $method.name + '(' +  $args + ')'
$str

\#\#\# Description
    
#set $docparts = $method.docs.split('@')
#set $description = $docparts[0]
$description.strip()

#set $docs = $method.docs

#if $docs.lower().find('phase2') >= 0:
Not yet implemented.
- - -

#else:
\#\#\# Parameters
    
    #set $params=dict() 
    #set $retval=''
    #set $rettype='' 
    #for $line in $docs.splitlines:
        #set $line = $line.strip()
        #if $line.find('@param') >= 0:
            #set $lineparts = $line.split(' ')
            #set $params[$lineparts[1].rstrip(':')] = $line[($line.find($lineparts[1]) + len($lineparts[1])):]
        #elif $line.find('@return') >= 0:
            #set $retval = $line.lstrip('@return:').strip()
        #elif $line.find('@rtype') >= 0:
            #set $rettype = $line.lstrip('@rtype:').strip()
        #end if
    #end for

    #for $arg in $method.argClasses :
        #if $params.has_key($arg.name):
* $arg.name ($arg.argtype): $params[$arg.name]
        #else:
* $arg.name ($arg.argtype): <no description found>
        #end if
    #end for
    
\#\#\# Example
    
    #set $lines=[]
    #for $arg in $method.argClasses:
        #set $line = '%s=<%s>'%($arg.name,$arg.argtype)
        $lines.append($line)
    #end for 
    #set $element = '&'.join($lines)

    http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_$className/$method.name?$element

List and Dicts are in [JSON](http://en.wikipedia.org/wiki/JSON) format.

\#\#\# Return

* Return result: $retval
* Return type: $rettype


\#\#\# Test Form
<Form name="testform_$method.name" id="testform_$method.name" style="display:none">
<table border=1>
    <tr>
#for $arg in $method.argClasses :
    #if $params.has_key($arg.name) and $arg.name not in ["executionparams", "jobguid"]:
        <td>$arg.name (type: $arg.argtype)</td><td><input type="text" name="param_$arg.name" size="30"/></td>
    #end if
    </tr>
#end for
    <tr><td colspan="2"><input type="submit" value="Execute method"/></td></tr>
    <tr>
        <td>Result</td>
        <td><textarea name="result_$method.name" id="result_$method.name" style="width:300px;"></textarea></td>
    </tr>
</table>
</Form>
Enter REST URL: <input size="70" type="text" name="resturl_$method.name" id="resturl_$method.name" value="" />
<input type="button" value="Open test form" onclick="javascript:showTestForm(testform_$method.name, '$method.name', 'resturl_$method.name', 'result_$method.name');"/>
<script>
    jQuery(document).ready(function() {
        document.getElementById("resturl_$method.name").value = "http://"+window.location.hostname+"/"+LFW_CONFIG.appname+"/appserver/rest/$domain/$className/$method.name";
    });
</script>
- - -
    #end if

<script>
    function showTestForm(formName, methodname, resturl, result)
    {
        jQuery(formName).dialog({title: 'Test Form for '+ methodname, closeOnEscape: false, width: 600, height:600, resizable: false});
        jQuery(formName).submit(function(event) {
            event.preventDefault();
            var requesttype = "POST";
            if(methodname == "find" || methodname == "getObject")
            {
                requesttype = "GET";
            }
            var values = {};
            jQuery.each(jQuery(formName).serializeArray(), function(i, field) {
                if(field.value != "" && field.name.indexOf("param_")>=0)
                {
                    values[field.name.replace("param_","")] = field.value;
                }
            });
            jQuery.ajax({
                type: requesttype,
                dataType: 'json',
                data: values,
                url: document.getElementById(resturl).value,
                success: function(data){
                    document.getElementById(result).value = JSON.stringify(data);
                },
                error: function(error){
                    document.getElementById(result).value = JSON.stringify(error);
                }
            });
        });
    }
</script>



\# XMLRPC Cloud API DOC - $className

#set $args = ', '.join($method.argNames)
#set $str = '## ' + $className + '.' + $method.name + '(' +  $args + ')'
$str

\#\#\# Description
    
#set $docparts = $method.docs.split('@')
#set $description = $docparts[0]
$description.strip()

#set $docs = $method.docs

#if $docs.lower().find('phase2') >= 0:
Not yet implemented.
- - -

#else:
\#\#\# Parameters
    
    #set $params=dict() 
    #set $retval=''
    #set $rettype='' 
    #for $line in $docs.splitlines:
        #set $line = $line.strip()
        #if $line.find('@param') >= 0:
            #set $lineparts = $line.split(' ')
            #set $params[$lineparts[1].rstrip(':')] = $line[($line.find($lineparts[1]) + len($lineparts[1])):]
        #elif $line.find('@return') >= 0:
            #set $retval = $line.lstrip('@return:').strip()
        #elif $line.find('@rtype') >= 0:
            #set $rettype = $line.lstrip('@rtype:').strip()
        #end if
    #end for

    #for $arg in $method.argClasses :
        #if $params.has_key($arg.name):
* $arg.name ($arg.argtype): $params[$arg.name]
        #else:
* $arg.name ($arg.argtype): <no description found>
        #end if
    #end for
    
\#\#\# Python Example
    
    #set $lines=[]
    #for $arg in $method.argClasses:
        #set $line = '%s=<%s>'%($arg.name,$arg.argtype)
        $lines.append($line)
    #end for 
    #set $element = ','.join($lines)
    #set str = '(' + $element + ')'

    import xmlrpclib

    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result = xmlrpcProxy.cloud_api_$className.$method.name$str)['result']

\#\#\# Return

* Return result: $retval
* Return type: $rettype

- - -
#end if

