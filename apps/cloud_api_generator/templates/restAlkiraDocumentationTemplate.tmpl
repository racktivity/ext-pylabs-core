\# REST Cloud API DOC - $className

__Index :__

<div class="macro macro_toc"></div>

#for $method in $methods :
    #set $args = ', '.join($method.argNames)
    #set $str = '## ' + $className + '.' + $method.name + '(' +  $args + ')'
$str

\#\#\# Description
    
    #set $docparts = $method.docs.split('@')
    #set $description = $docparts[0]
$description.strip()

    #set $docs = $method.docs

    #if $docs.lower().find('phase2') >= 0:
Not yet implemented.
- - -

    #else:
\#\#\# Parameters
    
        #set $params=dict() 
        #set $retval=''
        #set $rettype='' 
        #for $line in $docs.splitlines:
            #set $line = $line.strip()
            #if $line.find('@param') >= 0:
                #set $lineparts = $line.split(' ')
                #set $params[$lineparts[1].rstrip(':')] = $line[($line.find($lineparts[1]) + len($lineparts[1])):]
            #elif $line.find('@return') >= 0:
                #set $retval = $line.lstrip('@return:').strip()
            #elif $line.find('@rtype') >= 0:
                #set $rettype = $line.lstrip('@rtype:').strip()
            #end if
        #end for

        #for $arg in $method.argClasses :
            #if $params.has_key($arg.name):
* $arg.name ($arg.argtype): $params[$arg.name]
            #else:
* $arg.name ($arg.argtype): <no description found>
            #end if
        #end for
    
\#\#\# Example
    
        #set $lines=[]
        #for $arg in $method.argClasses:
            #set $line = '%s=<%s>'%($arg.name,$arg.argtype)
            $lines.append($line)
        #end for 
        #set $element = '&'.join($lines)

    http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_$className/$method.name?$element

List and Dicts are in [JSON](http://en.wikipedia.org/wiki/JSON) format.

\#\#\# Return

* Return result: $retval
* Return type: $rettype

- - -
    #end if
#end for
