h2. REST Cloud API DOC - vdc

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.vdc.restore(sourcevdcguid, destinationvdcguid, jobguid, executionparams)

    h4. Description
    
    
        
   

        {note} Not yet implemented {note}  
    h3.vdc.listCloudServices(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of cloud services for a given VDC.

        
   

    h4.  Parameters
    

                * vdcguid () :           guid of the VDC for which to retrieve the list of cloud services.
                * jobguid () :           guid of the job if avalailable else empty string
                * executionparams () :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/listCloudServices?vdcguid=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary of array of dictionaries with applicationguid, applicationname, languid, lanname, machineguid, machinename, positionx, positiony, status and array of connections for each cloud service.
Return type : dictionary 
    {noformat}

    h3.vdc.addApplication(vdcguid, applicationguid, positionx, positiony, jobguid, executionparams)

    h4. Description
    
    
        Adds an application as a cloudservice to the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC specified
                * applicationguid (guid) :   guid of the application to add to the specified VDC
                * positionx (int) :         X coodinate on the VDC canvas
                * positiony (int) :         Y coodinate on the VDC canvas
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/addApplication?vdcguid=<guid>&applicationguid=<guid>&positionx=<int>&positiony=<int>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.getObject(rootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Gets the rootobject.

        
   

    h4.  Parameters
    

                * rootobjectguid (guid) :     guid of the lan rootobject
                * jobguid () : <no description found>
                * executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/getObject?rootobjectguid=<guid>&jobguid=<>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : rootobject
Return type : string 
    {noformat}

    h3.vdc.listExportedImages(vdcguid, cloudspaceguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a the list of exported vdc images on the systemNAS for a specific vdc

        
   

    h4.  Parameters
    

                * vdcguid (guid) :            guid of the vdc rootobject
                * cloudspaceguid (guid) :     guid of the machine rootobject
                * jobguid (guid) :            guid of the job if avalailable else empty string
                * executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/listExportedImages?vdcguid=<guid>&cloudspaceguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : list of exported images.
Return type : array 
    {noformat}

    h3.vdc.addConnection(vdcguid, sourcerootobjectguid, destinationrootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Adds a connection between two cloud services in the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :                      guid of the VDC specified
                * sourcerootobjectguid (guid) :         guid of the source rootobject
                * destinationrootobjectguid (guid) :    guid of the destination rootobject
                * jobguid (guid) :                      guid of the job if avalailable else empty string
                * executionparams () : <no description found>
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/addConnection?vdcguid=<guid>&sourcerootobjectguid=<guid>&destinationrootobjectguid=<guid>&jobguid=<guid>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.find(cloudspaceguid, name, status, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of VDC guids which met the find criteria.

        
   

    h4.  Parameters
    

                * cloudspaceguid () :     guid of the parent cloudspace to include in the search criteria.
                * name () :               Name of the VDC to include in the search criteria.
                * status () :             Status of the  VDC to include in the search criteria. See listStatuses().
                * jobguid () :            guid of the job if avalailable else empty string
                * executionparams () :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/find?cloudspaceguid=<>&name=<>&status=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Array of VDC guids which met the find criteria specified.
Return type : array 
    {noformat}

    h3.vdc.removeMachine(vdcguid, machineguid, jobguid, executionparams)

    h4. Description
    
    
        Removes a machine from the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :          guid of the VDC specified
                * machineguid (guid) :      guid of the machine to add to the specified VDC
                * jobguid (guid) :          guid of the job if available else empty string
                * executionparams (dictionary) :  dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/removeMachine?vdcguid=<guid>&machineguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.pause(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Pauses all machines in VDC

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to specified.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/pause?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.addLan(vdcguid, languid, positionx, positiony, jobguid, executionparams)

    h4. Description
    
    
        Adds a lan as a cloudservice to the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :            guid of the VDC specified
                * languid (guid) :            guid of the lan to add to the specified VDC
                * positionx (int) :          X coodinate on the VDC canvas
                * positiony (int) :          Y coodinate on the VDC canvas
                * jobguid (guid) :            guid of the job if available else empty string
                * executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/addLan?vdcguid=<guid>&languid=<guid>&positionx=<int>&positiony=<int>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.create(cloudspaceguid, name, description, jobguid, executionparams)

    h4. Description
    
    
        Creates a new VDC in the space specified

        
   

    h4.  Parameters
    

                * cloudspaceguid (guid) :         guid of the cloud space specified
                * name (string) :                   Name for this new VDC
                * description (string) :            Description for this new VDC
                * jobguid (guid) :                guid of the job if avalailable else empty string
                * executionparams (dictionary) :        dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/create?cloudspaceguid=<guid>&name=<string>&description=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with cloud space guid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.reboot(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Reboots all machines in VDC

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to specified.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/reboot?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.executeQshellScript(vdcguid, qshellScriptContent, jobguid, executionparams)

    h4. Description
    
    
        Execute a Q-Shell script on all machines in VDC.
        This function requires a Q-Agent on every machine
        
        
   

        {note} Not yet implemented {note}  
    h3.vdc.moveToSpace(vdcguid, cloudspaceguid, jobguid, executionparams)

    h4. Description
    
    
        Moves the VDC specified to an other space. VDC can only be moved to spaces for which the authenticated user has sufficient rights.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to move.
                * cloudspaceguid (guid) :    guid of the cloud space to which the VDC will be moved.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/moveToSpace?vdcguid=<guid>&cloudspaceguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.start(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Starts all machines in VDC

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to specified.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/start?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.updateModelProperties(vdcguid, name, description, jobguid, executionparams)

    h4. Description
    
    
        Update basic properties (every parameter which is not passed or passed as empty string is not updated)

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the vdc specified
                * name (string) :              Name for this new VDC
                * description (string) :       Description for this new VDC
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/updateModelProperties?vdcguid=<guid>&name=<string>&description=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with vdc guid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.addMachine(vdcguid, machineguid, positionx, positiony, jobguid, executionparams)

    h4. Description
    
    
        Adds a machine as a cloudservice to the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :          guid of the VDC specified
                * machineguid (guid) :      guid of the machine to add to the specified VDC
                * positionx (int) :        X coodinate on the VDC canvas
                * positiony (int) :        Y coodinate on the VDC canvas
                * jobguid (guid) :          guid of the job if avalailable else empty string
                * executionparams (dictionary) :  dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/addMachine?vdcguid=<guid>&machineguid=<guid>&positionx=<int>&positiony=<int>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.rollback(vdcguid, backuplabel, jobguid, executionparams)

    h4. Description
    
    
        Rolls back a snapshot for all machines in VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to specified.
                * backuplabel (string) :       Label of the backupset to use for restore.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/rollback?vdcguid=<guid>&backuplabel=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.resume(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Resumes all machines in VDC

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to specified.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/resume?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.clone(sourcevdcguid, destinationcloudspaceguid, copynetworkinfo, maintenancemode, autostart, jobguid, executionparams)

    h4. Description
    
    
        Create a clone of a complete VDC.
        For the machines: cloning means the blocks on the disks are not copied, only the changes are remembered.

        
   

    h4.  Parameters
    

                * sourcevdcguid (guid) :                  guid of the VDC rootobject
                * destinationcloudspaceguid (guid) :      guid of the VDC rootobject. If not specified, VDC will be cloned in the same space as the source VDC.
                * copynetworkinfo (boolean) :                Boolean value indicating if the network info should be copied. Default is True.
                * maintenancemode (boolean) :                Boolean value indicating if cloned VDC should be put in maintenance mode. Default is False.
                * autostart (boolean) :                      Boolean value indicating if the machine of the new VDC should start automatically. Default is True.
                * jobguid (guid) :                        guid of the job if avalailable else empty string
                * executionparams (dictionary) :                dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/clone?sourcevdcguid=<guid>&destinationcloudspaceguid=<guid>&copynetworkinfo=<boolean>&maintenancemode=<boolean>&autostart=<boolean>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with vdc guid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.stop(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Stops all machines in VDC
        Leaves storage connections & network bridges intact

        
   

    h4.  Parameters
    

                * vdcguid (guid) :             guid of the VDC to specified.
                * jobguid (guid) :             guid of the job if avalailable else empty string
                * executionparams () : <no description found>
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/stop?vdcguid=<guid>&jobguid=<guid>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.initialize(vdcguid, start, jobguid, executionparams)

    h4. Description
    
    

        Initializes a vdc based on the model (walk through all cloud services of that vdc and do an initialize).

        
   

        {note} Not yet implemented {note}  
    h3.vdc.getXML(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XML format of the VDC rootobject.

        
   

        {note} Not yet implemented {note}  
    h3.vdc.importFromURI(vdcguid, sourceuri, executormachineguid, jobguid, cloudspaceguid, executionparams)

    h4. Description
    
    
        Imports a VDC from the source location specified.
        Export rootobject info

        
   

    h4.  Parameters
    

                * vdcguid (guid) :                     guid of the VDC to specified.
                * sourceuri (string) :                   URI of the location holding an exported VDC. (e.g ftp://login:passwd@myhost.com/backups/myvdc/)
                * executormachineguid (guid) :         guid of the machine which should convert the disk to a VDI. If the executormachineguid is empty, a machine will be selected automatically.
                * jobguid (guid) :                     guid of the job if avalailable else empty string
                * cloudspaceguid (guid) :              guid of the cloudspace this machine is part of.
                * executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/importFromURI?vdcguid=<guid>&sourceuri=<string>&executormachineguid=<guid>&jobguid=<guid>&cloudspaceguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.copy(sourcevdcguid, destinationcloudspaceguid, copynetworkinfo, maintenancemode, autostart, jobguid, executionparams)

    h4. Description
    
    
        See clone action but this case is copy instead of clone.
        
        
   

    h4.  Parameters
    

                * sourcevdcguid () : <no description found>
                * destinationcloudspaceguid () : <no description found>
                * copynetworkinfo () : <no description found>
                * maintenancemode () : <no description found>
                * autostart () : <no description found>
                * jobguid () : <no description found>
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/copy?sourcevdcguid=<>&destinationcloudspaceguid=<>&copynetworkinfo=<>&maintenancemode=<>&autostart=<>&jobguid=<>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : 
Return type :  
    {noformat}

    h3.vdc.removeLan(vdcguid, languid, jobguid, executionparams)

    h4. Description
    
    
        Removes a lan from to the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC specified
                * languid (guid) :           guid of the lan to add to the specified VDC
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/removeLan?vdcguid=<guid>&languid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.getXMLSchema(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XSD format of the VDC rootobject structure.

        
   

        {note} Not yet implemented {note}  
    h3.vdc.exportToURI(vdcguid, destinationuri, executormachineguid, compressed, imagetype, jobguid, executionparams)

    h4. Description
    
    
        Exports all macine of the VDC specified as vdi image on defined destination.
        Export rootobject info

        
   

    h4.  Parameters
    

                * vdcguid (guid) :               guid of the VDC to specified.
                * destinationuri (string) :        URI of the location where the VDI should be stored. (e.g ftp://login:passwd@myhost.com/backups/myvdc/)
                * executormachineguid (guid</para><para>@param compressed            Boolean value indicating if all exported machines should be compressed. Compression used is 7zip) :   guid of the machine which should convert the disk to a VDI. If the executormachineguid is empty, a machine will be selected automatically.
                * compressed () :             Boolean value indicating if all exported machines should be compressed. Compression used is 7zip
                * imagetype (string) :              Type of image format to use.
                * jobguid (guid) :               guid of the job if avalailable else empty string
                * executionparams (dictionary) :       dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/exportToURI?vdcguid=<guid>&destinationuri=<string>&executormachineguid=<guid</para><para>@param compressed            Boolean value indicating if all exported machines should be compressed. Compression used is 7zip>&compressed=<>&imagetype=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.list(cloudspaceguid, vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of virtual datacenters (VDCs) for a given cloudspace/vdc.

        
   

    h4.  Parameters
    

                * cloudspaceguid () :    guid of the cloudspace for which to retrieve the list of VDCs.
                * vdcguid () :           guid of the vdc
                * jobguid () :           guid of the job if avalailable else empty string
                * executionparams () :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/list?cloudspaceguid=<>&vdcguid=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary of array of dictionaries with guid, name and status for each VDC.
Return type : dictionary 
    {noformat}

    h3.vdc.getYAML(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in YAML format of the vdc rootobject.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :             guid of the vdc rootobject
                * jobguid (guid) :             guid of the job if avalailable else empty string
                * executionparams (dictionary) :     dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/getYAML?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : YAML representation of the vdc
Return type : string 
    {noformat}

    h3.vdc.removeConnection(vdcguid, sourcecloudserviceguid, destinationcloudserviceguid, jobguid, executionparams)

    h4. Description
    
    
        Removes a connection between two cloud services in the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :                       guid of the VDC specified
                * sourcecloudserviceguid (guid) :        guid of the cloud service to connect
                * destinationcloudserviceguid (guid) :   guid of the cloud service to connect
                * jobguid (guid) :                       guid of the job if avalailable else empty string
                * executionparams (dictionary) :               dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/removeConnection?vdcguid=<guid>&sourcecloudserviceguid=<guid>&destinationcloudserviceguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.listStatuses(jobguid, executionparams)

    h4. Description
    
    
        Returns a list of possible VDC statuses.

        
   

    h4.  Parameters
    

                * jobguid () :           guid of the job if avalailable else empty string
                * executionparams () :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/listStatuses?jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary of array of statuses.
Return type : dictionary 
    {noformat}

    h3.vdc.removeApplication(vdcguid, applicationguid, jobguid, executionparams)

    h4. Description
    
    
        Removes an application from to the specified VDC.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC specified
                * applicationguid (guid) :   guid of the application to add to the specified VDC
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/removeApplication?vdcguid=<guid>&applicationguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.snapshot(vdcguid, backuplabel, jobguid, executionparams)

    h4. Description
    
    
        Creates snapshots of all machines in VDC

        
   

    h4.  Parameters
    

                * vdcguid (guid) :           guid of the VDC to specified.
                * backuplabel (string) :       Label which will be put on all snapshots of all machines of this VDC.
                * jobguid (guid) :           guid of the job if avalailable else empty string
                * executionparams (dictionary) :   dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/snapshot?vdcguid=<guid>&backuplabel=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.vdc.getConfigurationString(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Generate the configuration string for the given vdc 

        
   

    h4.  Parameters
    

                * vdcguid (guid) :            guid of the vdc
                * jobguid (guid) :            guid of the job if avalailable else empty string
                * executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/getConfigurationString?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : string containing configuration data
Return type : string 
    {noformat}

    h3.vdc.backup(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        backup all machines in VDC
        also backup all metadata to do with VDC (e.g. network info)
        
        
   

        {note} Not yet implemented {note}  
    h3.vdc.delete(vdcguid, jobguid, executionparams)

    h4. Description
    
    
        Deletes the VDC specified.

        
   

    h4.  Parameters
    

                * vdcguid (guid) :             guid of the VDC to delete.
                * jobguid (guid) :             guid of the job if avalailable else empty string
                * executionparams (dictionary) :     dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_vdc/delete?vdcguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

