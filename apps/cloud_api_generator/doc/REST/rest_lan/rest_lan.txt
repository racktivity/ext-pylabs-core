h2. REST Cloud API DOC - lan

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.lan.listVdcs(languid, jobguid, executionparams)

    h4. Description
    
    
        List the vdcs the lan is used in.

        
   

    h4.  Parameters
    

                * languid (guid) :                     guid of the lan to list the vdcs for.
                * jobguid (guid) :                     guid of the job if available else empty string
                * executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/listVdcs?languid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with array of ip info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.getObject(rootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Gets the rootobject.

        
   

    h4.  Parameters
    

                * rootobjectguid (guid) :     guid of the lan rootobject
                * jobguid () : <no description found>
                * executionparams () : <no description found>
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/getObject?rootobjectguid=<guid>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : rootobject
Return type : string 
    {noformat}

    h3.lan.setFromIpToIp(languid, fromip, toip, jobguid, executionparams)

    h4. Description
    
    
        Configures the network for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * fromip (string) :                  Network address for the LAN
                * toip (string) :                    Defines if the LAN is used as a management LAN
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setFromIpToIp?languid=<guid>&fromip=<string>&toip=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.setFlags(languid, publicflag, managementflag, storageflag, internetpublicflag, jobguid, executionparams)

    h4. Description
    
    
        Sets the role flags for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * publicflag (boolean) :              Defines if the LAN is used as a public LAN. Not modified if empty.
                * managementflag (boolean) :          Defines if the LAN is used as a management LAN. Not modified if empty.
                * storageflag (boolean) :             Defines if the LAN is used as a storage LAN. Not modified if empty.
                * internetpublicflag (boolean) :      Defines if the LAN is used as a internet public LAN. e.g a public lan with extra security constraints.
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setFlags?languid=<guid>&publicflag=<boolean>&managementflag=<boolean>&storageflag=<boolean>&internetpublicflag=<boolean>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.find(backplaneguid, cloudspaceguid, name, dns, status, startip, endip, gateway, managementflag, publicflag, storageflag, network, netmask, parentlanguid, vlantag, lantype, dhcpflag, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of LAN guids which met the find criteria.

        
   

    h4.  Parameters
    

                * backplaneguid () :            guid of the backplane to include in the search criteria.
                * cloudspaceguid () :           guid of the cloudspace to include in the search criteria.
                * name () :                     Name of the lans to include in the search criteria.
                * dns () :                      DNS of the lans to include in the search criteria.
                * status () :                   Status of the lans to include in the search criteria. See listStatuses().
                * startip () :                  startip of the lans to include in the search criteria.
                * endip () :                    endip of the lans to include in the search criteria.
                * gateway () :                  gateway of the lans to include in the search criteria.
                * managementflag () :           managementflag of the lans to include in the search criteria.
                * publicflag () :               publicflag of the lans to include in the search criteria.
                * storageflag () :              storageflag of the lans to include in the search criteria.
                * network () :                  network of the lans to include in the search criteria.
                * netmask () :                  netmask of the lans to include in the search criteria.
                * parentlanguid () :            guid of the parent lan to include in the search criteria.
                * vlantag () :                  vlan tag of the lans to include in the search criteria.
                * lantype () :                  Type the lan (static of dynamic)
                * dhcpflag () : <no description found>
                * jobguid () :                  guid of the job if available else empty string
                * executionparams () :          dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/find?backplaneguid=<>&cloudspaceguid=<>&name=<>&dns=<>&status=<>&startip=<>&endip=<>&gateway=<>&managementflag=<>&publicflag=<>&storageflag=<>&network=<>&netmask=<>&parentlanguid=<>&vlantag=<>&lantype=<>&dhcpflag=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Array of lan guids which met the find criteria specified.
Return type : array 
    {noformat}

    h3.lan.listMacRanges(publicflag, managementflag, jobguid, executionparams)

    h4. Description
    
    
        Returns the macranges define on lans

        
   

    h4.  Parameters
    

                * publicflag (boolean) :                  Filter on public flag on lan
                * managementflag (boolean) :              Filter on management flag on lan
                * jobguid (guid) :                     guid of the job if available else empty string
                * executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/listMacRanges?publicflag=<boolean>&managementflag=<boolean>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : list of dictionary {'guid','name','macrange','publicflag','managementflag'}
Return type : list 
    {noformat}

    h3.lan.moveToCloudspace(languid, spaceguid, jobguid, executionparams)

    h4. Description
    
    
        Moves the specified LAN to the another space.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * spaceguid (guid) :               guid of the space to move the LAN to
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/moveToCloudspace?languid=<guid>&spaceguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.create(cloudspaceguid, backplaneguid, name, lantype, parentlanguid, network, netmask, fromip, toip, gateway, dns, publicflag, internetpublicflag, managementflag, storageflag, description, integratedflag, nrreservedip, jobguid, executionparams)

    h4. Description
    
    
        Creates a new lan

        
   

    h4.  Parameters
    

                * cloudspaceguid (guid) :          guid of the space this lan is part of
                * backplaneguid (guid) :           guid of the backplane this lan is part of
                * name (string) :                    Name the lan
                * lantype (string) :                 Type the lan (static of dynamic)
                * parentlanguid (guid) :           guid of the lan's parent lan
                * network (string) :                 Network address for the LAN
                * netmask (string) :                 Netmask for the LAN
                * fromip (string) :                  Network address for the LAN
                * toip (string) :                    Defines if the LAN is used as a management LAN
                * gateway (string) :                 Address of the default gateway.
                * dns (string) :                     Address of the DNS server.
                * publicflag (boolean) :              Defines if the LAN is used as a public LAN. Not modified if empty.
                * internetpublicflag (boolean) :      Defines if the LAN is used as a internet public LAN. Not modified if empty.
                * managementflag (boolean) :          Defines if the LAN is used as a management LAN. Not modified if empty.
                * storageflag (boolean) :             Defines if the LAN is used as a storage LAN. Not modified if empty.
                * description (string) :             Description of the LAN
                * integratedflag (boolean) :          True if the lan is a integrated network or not, default false, because only used for public networks
                * nrreservedip (integer) :            Number of reserved ip addresses for the sso nodes
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/create?cloudspaceguid=<guid>&backplaneguid=<guid>&name=<string>&lantype=<string>&parentlanguid=<guid>&network=<string>&netmask=<string>&fromip=<string>&toip=<string>&gateway=<string>&dns=<string>&publicflag=<boolean>&internetpublicflag=<boolean>&managementflag=<boolean>&storageflag=<boolean>&description=<string>&integratedflag=<boolean>&nrreservedip=<integer>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with languid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.setStatus(languid, status, jobguid, executionparams)

    h4. Description
    
    
        Configures the status for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * status (string) :                  Status of the LAN ("BROKEN", "ACTIVE", "DISABLED", "NOTCONNECTED)
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setStatus?languid=<guid>&status=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.updateModelProperties(languid, name, description, gateway, network, netmask, startip, endip, jobguid, executionparams)

    h4. Description
    
    
        Update basic properties

        
   

    h4.  Parameters
    

                * languid (guid) :                  Guid of the LAN to update.
                * name (string) :                     Name of the lan.
                * description (string) :              Description of the lan.
                * gateway (string) :                  Gateway of the lan.
                * network (string) :                  Network of the lan.
                * netmask (string) :                  Netmask of the lan.
                * startip (string) :                  Startip of the lans to include in the search criteria.
                * endip (string) :                    Endip of the lans to include in the search criteria.
                * jobguid (guid) :                  Guid of the job if available else empty string
                * executionparams (dictionary) :          dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/updateModelProperties?languid=<guid>&name=<string>&description=<string>&gateway=<string>&network=<string>&netmask=<string>&startip=<string>&endip=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with lan guid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.getNextMacRange(jobguid, executionparams)

    h4. Description
    
    
        Get the next mac range for a qlan

        
   

    h4.  Parameters
    

                * jobguid (guid) :                     guid of the job if available else empty string
                * executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/getNextMacRange?jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with array of ip info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.checkIPRangeInUse(startip, endip, jobguid, executionparams)

    h4. Description
    
    
        Check if this ip range conflicts with any existing ip range, return true if it conflicts, false otherwise
        
        
   

    h4.  Parameters
    

                * startip (string) :                     Start ip of the range
                * endip (string) :                       End ip of the range
                * jobguid (guid) :                     guid of the job if available else empty string
                * executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/checkIPRangeInUse?startip=<string>&endip=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : array of the existing lans that conflict with this range ({'result': array, 'jobguid': guid})
Return type : dictionary 
    {noformat}

    h3.lan.setLanType(languid, lantype, jobguid, executionparams)

    h4. Description
    
    
        Configures the LAN type for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the lan
                * lantype (integer) :                 Type of LAN
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setLanType?languid=<guid>&lantype=<integer>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.setNetworkNetmask(languid, network, netmask, jobguid, executionparams)

    h4. Description
    
    
        Configures the network for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * network (string) :                 Network address for the LAN
                * netmask (string) :                 Netmask for the LAN
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setNetworkNetmask?languid=<guid>&network=<string>&netmask=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.listIPAddresses(languid, jobguid, executionparams)

    h4. Description
    
    
        List all IP addresses for a lan.

        
   

    h4.  Parameters
    

                * languid () :                     guid of the lan to list the ips for.
                * jobguid () :                     guid of the job if available else empty string
                * executionparams () :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/listIPAddresses?languid=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with array of ip info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.setDNS(languid, dns, jobguid, executionparams)

    h4. Description
    
    
        Configures the domain name server for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * dns (string) :                     Address of the DNS server.
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setDNS?languid=<guid>&dns=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.getXML(languid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XML format of the lan rootobject.

        
   

        {note} Not yet implemented {note}  
    h3.lan.setDefaultGateway(languid, gateway, jobguid, executionparams)

    h4. Description
    
    
        Configures the default gateway for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * gateway (string) :                 Address of the default gateway.
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setDefaultGateway?languid=<guid>&gateway=<string>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.getXMLSchema(languid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XSD format of the lan rootobject structure.

        
   

        {note} Not yet implemented {note}  
    h3.lan.moveToBackplane(languid, backplaneguid, jobguid, executionparams)

    h4. Description
    
    
        Moves the specified LAN to the another backplane.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the LAN
                * backplaneguid (guid) :           guid of the backplane to move the LAN to
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/moveToBackplane?languid=<guid>&backplaneguid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.list(cloudspaceguid, backplaneguid, languid, jobguid, executionparams)

    h4. Description
    
    
        List all lans.

        
   

    h4.  Parameters
    

                * cloudspaceguid () :              guid of the cloud space to list the lans for. If not specified, return all lans you have access to.
                * backplaneguid () :               guid of the backplane to list the lans for. If not specified, return all lans you have access to.
                * languid () :                     guid of the LAN
                * jobguid () :                     guid of the job if available else empty string
                * executionparams () :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/list?cloudspaceguid=<>&backplaneguid=<>&languid=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with array of lan info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.getYAML(languid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in YAML format of the lan rootobject.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the lan rootobject
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/getYAML?languid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : YAML representation of the disk
Return type : string 
    {noformat}

    h3.lan.listFreeIPAddresses(languid, jobguid, executionparams)

    h4. Description
    
    
        List the free ip addresses for a lan.

        
   

    h4.  Parameters
    

                * languid () :                     guid of the lan to list the ips for.
                * jobguid () :                     guid of the job if available else empty string
                * executionparams () :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/listFreeIPAddresses?languid=<>&jobguid=<>&executionparams=<> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : dictionary with array of ip info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.setVlanTag(languid, vlantag, jobguid, executionparams)

    h4. Description
    
    
        Configures the VLAN tag for the specified LAN.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the lan
                * vlantag (integer) :                 VLAN tag
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/setVlanTag?languid=<guid>&vlantag=<integer>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

    h3.lan.delete(languid, jobguid, executionparams)

    h4. Description
    
    
        Deletes s lan.

        
   

    h4.  Parameters
    

                * languid (guid) :                 guid of the lan to delete
                * jobguid (guid) :                 guid of the job if available else empty string
                * executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Example
    
            
            
            
    
    {noformat:nopanel=true}http://<name>:<password>@<environment url>:<port number>/appserver/rest/cloud_api_lan/delete?languid=<guid>&jobguid=<guid>&executionparams=<dictionary> {noformat} 
    \\ List and Dicts are in [json|http://en.wikipedia.org/wiki/JSON] format.
    
    h4. Return
    
    {noformat:nopanel=true} 
Return result : Dictionary with True as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary 
    {noformat}

