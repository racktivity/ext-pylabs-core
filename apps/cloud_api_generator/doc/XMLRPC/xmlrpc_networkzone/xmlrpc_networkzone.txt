h2. XMLRPC Cloud API DOC - networkzone

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.networkzone.getXMLSchema(networkzoneguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XSD format of the networkzone rootobject structure.

        
    
    
        {note} Not yet implemented {note}
    h3.networkzone.create(name, description, public, datacenterguid, parentnetworkzoneguid, ranges, jobguid, executionparams)

    h4. Description
    
    
        Create a new networkzone.

        
    
    

    h4.  Parameters
    

                * Name (string) :                    name of the networkzone
                * Description (string) :             description of the object
                * Public (bool) :                  is this network zone public to the internet
                * Datacenterguid (guid) :          guid of the datacenter
                * Parentnetworkzoneguid (guid) :   guid of the parantnetworkzoneguid
                * Ranges (array(networkzonerange)) :                  list of networkzoneranges
                * Jobguid (guid) :                 Guid of the job if avalailable else empty string
                * Executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.create(name=<string>,description=<string>,public=<bool>,datacenterguid=<guid>,parentnetworkzoneguid=<guid>,ranges=<array(networkzonerange)>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with networkzoneguid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.networkzone.list(networkzoneguid, jobguid, executionparams)

    h4. Description
    
    
        List all networkzones.

        
    
    

    h4.  Parameters
    

                * Networkzoneguid () :          Guid of the networkzone specified
                * Jobguid () :                  Guid of the job if avalailable else empty string
                * Executionparams () :          dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.list(networkzoneguid=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with array of networkzone info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.networkzone.getYAML(networkzoneguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in YAML format of the networkzone rootobject.

        
    
    

    h4.  Parameters
    

                * Networkzoneguid (guid) :        Guid of the networkzone rootobject
                * Jobguid (guid) :                Guid of the job if avalailable else empty string
                * Executionparams (dictionary) :        dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.getYAML(networkzoneguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : YAML representation of the networkzone
Return type : string
    {noformat}
    h3.networkzone.getObject(rootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Gets the rootobject.

        
    
    

    h4.  Parameters
    

                * Rootobjectguid (guid) :       Guid of the networkzone rootobject
                * Jobguid () : <no description found>
                * Executionparams () : <no description found>
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.getObject(rootobjectguid=<guid>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : rootobject
Return type : string
    {noformat}
    h3.networkzone.updateModelProperties(networkzoneguid, name, description, public, datacenterguid, parentnetworkzoneguid, ranges, jobguid, executionparams)

    h4. Description
    
    
        Update basic properties (every parameter which is not passed or passed as empty string is not updated)

        
    
    

    h4.  Parameters
    

                * Networkzoneguid (guid) :         Guid of the networkzone specified
                * Name (string) :                    name of the networkzone
                * Description (string) :             description of the object
                * Public (bool) :                  is this network zone public to the internet
                * Datacenterguid (guid) :          guid of the datacenter
                * Parentnetworkzoneguid (guid) :   guid of the parantnetworkzoneguid
                * Ranges (array(networkzonerange)) :                  list of networkzoneranges
                * Jobguid (guid) :                 Guid of the job if avalailable else empty string
                * Executionparams (dictionary) :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.updateModelProperties(networkzoneguid=<guid>,name=<string>,description=<string>,public=<bool>,datacenterguid=<guid>,parentnetworkzoneguid=<guid>,ranges=<array(networkzonerange)>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with networkzone guid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.networkzone.getXML(networkzoneguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XML format of the networkzone rootobject.

        
    
    
        {note} Not yet implemented {note}
    h3.networkzone.find(name, description, public, datacenterguid, parentnetworkzoneguid, ranges, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of networkzone guids which met the find criteria.

        
    
    

    h4.  Parameters
    

                * Name () :                    name of the networkzone
                * Description () :             description of the object
                * Public () :                  is this network zone public to the internet
                * Datacenterguid () :          guid of the datacenter
                * Parentnetworkzoneguid () :   guid of the parantnetworkzoneguid
                * Ranges () :                  list of networkzoneranges
                * Jobguid () :                 Guid of the job if avalailable else empty string
                * Executionparams () :         dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.find(name=<>,description=<>,public=<>,datacenterguid=<>,parentnetworkzoneguid=<>,ranges=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : Array of networkzone guids which met the find criteria specified.
Return type : array
    {noformat}
    h3.networkzone.delete(networkzoneguid, jobguid, executionparams)

    h4. Description
    
    
        Delete a networkzone.

        
    
    

    h4.  Parameters
    

                * Networkzoneguid (guid) :        Guid of the networkzone rootobject to delete.
                * Jobguid (guid) :                Guid of the job if avalailable else empty string
                * Executionparams (dictionary) :        dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_networkzone.delete(networkzoneguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with True as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary
    {noformat}
