h2. XMLRPC Cloud API DOC - clouduserrole

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.clouduserrole.getXMLSchema(clouduserroleguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XSD format of the disk rootobject structure.

        
    
    
        {note} Not yet implemented {note}
    h3.clouduserrole.list(name, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of clouduserroles info which met the find criteria.

        
    
    

    h4.  Parameters
    

                * Name (string) :                        Name of the cloud user role
                * Jobguid (guid) :                     guid of the job if available else empty string
                * Executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_clouduserrole.list(name=<string>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with an array of policy guids as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.clouduserrole.getYAML(clouduserroleguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in YAML format of the clouduserrole rootobject.

        
    
    
        {note} Not yet implemented {note}
    h3.clouduserrole.getObject(rootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Gets the rootobject.

        
    
    

    h4.  Parameters
    

                * Rootobjectguid (guid) :     guid of the cloud user role rootobject
                * Jobguid () : <no description found>
                * Executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_clouduserrole.getObject(rootobjectguid=<guid>,jobguid=<>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : rootobject
Return type : string
    {noformat}
    h3.clouduserrole.getXML(clouduserroleguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XML format of the clouduserrole rootobject.

        
    
    
        {note} Not yet implemented {note}
    h3.clouduserrole.find(name, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of clouduserrole guids which meet the find criteria.

        
    
    

    h4.  Parameters
    

                * Name (string) :                        Name of the cloud user role.
                * Jobguid (guid) :                     guid of the job if available else empty string
                * Executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_clouduserrole.find(name=<string>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with an array of clouduserrole guids as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
