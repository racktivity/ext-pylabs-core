h2. XMLRPC Cloud API DOC - os

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.os.getXMLSchema(osguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XSD format of the os rootobject structure.

        
    
    
        {note} Not yet implemented {note}
    h3.os.list(osguid, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of all known operating systems.

        
    
    

    h4.  Parameters
    

                * Osguid () :                guid of the os rootobject
                * Jobguid () :               guid of the job if avalailable else empty string
                * Executionparams () :       dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_os.list(osguid=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with array of operating system info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.os.getYAML(osguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in YAML format of the os rootobject.

        
    
    

    h4.  Parameters
    

                * Osguid () : <no description found>
                * Jobguid (guid) :                  guid of the job if avalailable else empty string
                * Executionparams () : <no description found>
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_os.getYAML(osguid=<>,jobguid=<guid>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : YAML representation of the os
Return type : string
    {noformat}
    h3.os.getObject(rootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Gets the rootobject.

        
    
    

    h4.  Parameters
    

                * Rootobjectguid (guid) :     guid of the os object
                * Jobguid () : <no description found>
                * Executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_os.getObject(rootobjectguid=<guid>,jobguid=<>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : rootobject
Return type : string
    {noformat}
    h3.os.getXML(osguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XML format of the os rootobject.

        
    
    
        {note} Not yet implemented {note}
    h3.os.find(name, ostype, iconname, osversion, patchlevel, description, osbitversion, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of os guids which met the find criteria.

        
    
    

    h4.  Parameters
    

                * Name (string) :                Name of the os.
                * Ostype (string) :              Os type.
                * Iconname (string) :            filename of icon representing os in various clouduser interfaces
                * Osversion (string) :           version of the operating system
                * Patchlevel (string) :          patch level of operating system
                * Description (string) :         description of the operating system
                * Osbitversion (string) :           bit version of the operating system e.g. 32-bit , 64-bit
                * Jobguid (guid) :             guid of the job if avalailable else empty string
                * Executionparams (dictionary) :     dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_os.find(name=<string>,ostype=<string>,iconname=<string>,osversion=<string>,patchlevel=<string>,description=<string>,osbitversion=<string>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with an array of os guids as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
