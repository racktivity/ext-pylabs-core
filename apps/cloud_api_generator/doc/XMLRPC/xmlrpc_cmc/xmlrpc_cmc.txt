h2. XMLRPC Cloud API DOC - cmc

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.cmc.getRootPolicyJobList(joblimit, jobguid, executionparams)

    h4. Description
    
    
        Gets all root policy jobs used as overview in cmc

        
    
    

    h4.  Parameters
    

                * Joblimit () :              number of jobs to display
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getRootPolicyJobList(joblimit=<>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getRootMonitoringJobList(joblimit, jobguid, executionparams)

    h4. Description
    
    
        Gets all root monitoring jobs used as overview in cmc

        
    
    

    h4.  Parameters
    

                * Joblimit () :              number of jobs to display
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getRootMonitoringJobList(joblimit=<>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.listAvailableTreeItems(clouduserguid, jobguid, executionparams)

    h4. Description
    
    
        
    
    

    h4.  Parameters
    

                * Clouduserguid () : <no description found>
                * Jobguid (guid) :               Guid of the job if avalailable else empty string
                * Executionparams (dictionary) :       dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.listAvailableTreeItems(clouduserguid=<>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with array of tree info (as dict) as result and jobguid
Return type : dictionary
    {noformat}
    h3.cmc.getChildApplications(parentapplicationguid, jobguid, executionparams)

    h4. Description
    
    
        Returns the applicationguid(s) of the instanciated cloudservice

        
    
    
        {note} Not yet implemented {note}
    h3.cmc.listMachineDisks(machineguid, jobguid, executionparams)

    h4. Description
    
    
        List the disks for a given machine.

        
    
    

    h4.  Parameters
    

                * Machineguid (guid) :           guid of the machine to list the backups from.
                * Jobguid (guid) :               guid of the job if avalailable else empty string
                * Executionparams (dictionary) :       dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.listMachineDisks(machineguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with array of disks info as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.cmc.getVirtualDesktopOverview(cloudspaceguid, istemplate, jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the virtual desktop overview page in cmc

        
    
    

    h4.  Parameters
    

                * Cloudspaceguid () : <no description found>
                * Istemplate () :           Boolean indicating if the list returns templates or not
                * Jobguid () :              Guid of the job if available else empty string
                * Executionparams () :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getVirtualDesktopOverview(cloudspaceguid=<>,istemplate=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.listAvailableCommands(objecttype, objectguid, screenname, clouduserguid, cloudspaceguid, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of available commands for the user on a given object of a given type for a given screen.

        
    
    

    h4.  Parameters
    

                * Objecttype () :           Name of the object type for which you want to list the actions
                * Objectguid () :           Guid of the object for which you want to retrieve the action for (for the current user)
                * Screenname () :           Name of the screen for which you want to retrieve the actions for
                * Clouduserguid () :        Guid of the user for which you want to retrieve the action for
                * Cloudspaceguid () :       Guid of the cloudspace for which you want to retrieve the action for
                * Jobguid () :              Guid of the job if available else empty string
                * Executionparams () :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.listAvailableCommands(objecttype=<>,objectguid=<>,screenname=<>,clouduserguid=<>,cloudspaceguid=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dict
Return type : 
    {noformat}
    h3.cmc.getRootJobsList(joblimit, jobguid, executionparams)

    h4. Description
    
    
        Gets all root jobs used as overview in cmc

        
    
    

    h4.  Parameters
    

                * Joblimit () :              number of jobs to display
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getRootJobsList(joblimit=<>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getDashboard(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the dashboard page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getDashboard(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getRootErrorConditionsList(errorconditionslimit, jobguid, executionparams)

    h4. Description
    
    
        Gets all root error conditions used as overview in cmc

        
    
    

    h4.  Parameters
    

                * Errorconditionslimit () :      number of error conditions to display
                * Jobguid (guid) :                  Guid of the job if available else empty string
                * Executionparams (dictionary) :          Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getRootErrorConditionsList(errorconditionslimit=<>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.GetSmartClientDevices(jobguid, executionparams)

    h4. Description
    
    
        Gets all SMARTCLIENT devices

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.GetSmartClientDevices(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getPDiskInfo(jobguid, executionparams)

    h4. Description
    
    
        Returns pdisk information

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      path to the generated graph
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getPDiskInfo(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dict
Return type : 
    {noformat}
    h3.cmc.getMaintenanceEnviromnentOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the maintenance environment overview page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getMaintenanceEnviromnentOverview(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getCDUDevices(jobguid, executionparams)

    h4. Description
    
    
        Gets all CDU devices

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getCDUDevices(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getLogicalDisks(machineguid, jobguid, executionparams)

    h4. Description
    
    
        Get all logical disks for specified pmachine or all physical disks from the environment.
        
        
    
    

    h4.  Parameters
    

                * Machineguid (guid) :          Guid of the pmachine
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getLogicalDisks(machineguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getRRDGraph(rrdParams, jobguid, executionparams)

    h4. Description
    
    
        Returns the path to the generated RRD graph

        
    
    

    h4.  Parameters
    

                * Rrdparams (dictionary) :            Dictionary of all parameters needed to generate the RRD graph
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      path to the generated graph
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getRRDGraph(rrdParams=<dictionary>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dict
Return type : 
    {noformat}
    h3.cmc.getAccessControlList(jobguid, executionparams)

    h4. Description
    
    
        Returns the access control list for an authenticated clouduser        

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of all access items in CMC
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getAccessControlList(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dict
Return type : 
    {noformat}
    h3.cmc.listVDisks(machineguid, jobguid, executionparams)

    h4. Description
    
    
        Gets all vdisks attached to specified pmachine

        
    
    

    h4.  Parameters
    

                * Machineguid (guid) :          Guid of the pmachine
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.listVDisks(machineguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getTreeData(jobguid, executionparams)

    h4. Description
    
    
        Gets all needed data to build up the cmc tree

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getTreeData(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getLoggingInformation(joblogguid, jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the logging page (jobs and events) in cmc

        
    
    

    h4.  Parameters
    

                * Joblogguid (guid) :           Guid of the job from which to get the logging information
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getLoggingInformation(joblogguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getCombinedNodesOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the combined nodes overview page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getCombinedNodesOverview(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getUserTreeData(customerguid, jobguid, executionparams)

    h4. Description
    
    
        Gets all needed data to build up the cmc user management tree

        
    
    

    h4.  Parameters
    

                * Customerguid (guid) :         Guid of the customer
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getUserTreeData(customerguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getProductionEnviromnentOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the production environment overview page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getProductionEnviromnentOverview(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getNetworkOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the network overview page in cmc

        
    
    
        {note} Not yet implemented {note}
    h3.cmc.listAvailablePlugins(jobguid, executionparams)

    h4. Description
    
    
        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :               guid of the job if avalailable else empty string
                * Executionparams (dictionary) :       dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.listAvailablePlugins(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with array of plugin info (as dict) as result and jobguid
Return type : dictionary
    {noformat}
    h3.cmc.getResourceNodesOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the resource nodes overview page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getResourceNodesOverview(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.updateCloudServicePosition(vdcguid, cloudserviceguid, positionx, positiony, jobguid, executionparams)

    h4. Description
    
    
        Updates the coordinates of a cloudservcie in the database

        
    
    

    h4.  Parameters
    

                * Vdcguid (guid) :              Guid of the vdc
                * Cloudserviceguid (guid) :     Guid of the cloudservice
                * Positionx (int) :            X coordinates of the item in the vdc gui
                * Positiony (int) :            Y coordinates of the item in the vdc gui
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.updateCloudServicePosition(vdcguid=<guid>,cloudserviceguid=<guid>,positionx=<int>,positiony=<int>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getDiskManagementOverview(cloudspaceguid, jobguid, executionparams)

    h4. Description
    
    
        Returns disk information on virtual disks in SSO

        
    
    

    h4.  Parameters
    

                * Cloudspaceguid (guid) :       Guid of the cloudspace to filter on
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      path to the generated graph
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getDiskManagementOverview(cloudspaceguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dict
Return type : 
    {noformat}
    h3.cmc.getCloudService(name, jobguid, executionparams)

    h4. Description
    
    
        Returns the applicationguid(s) of the instanciated cloudservice

        
    
    
        {note} Not yet implemented {note}
    h3.cmc.getStorageNodesOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the storage nodes overview page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getStorageNodesOverview(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getVirtualServerOverview(cloudspaceguid, istemplate, jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the virtual server overview page in cmc

        
    
    

    h4.  Parameters
    

                * Cloudspaceguid () : <no description found>
                * Istemplate () :           Boolean indicating if the list returns templates or not
                * Jobguid () :              Guid of the job if available else empty string
                * Executionparams () :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getVirtualServerOverview(cloudspaceguid=<>,istemplate=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getSmartclientsOverview(cloudspaceguid, istemplate, jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the smartclients overview page in cmc

        
    
    

    h4.  Parameters
    

                * Cloudspaceguid () : <no description found>
                * Istemplate () :           Boolean indicating if the list returns templates or not
                * Jobguid () :              Guid of the job if available else empty string
                * Executionparams () :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getSmartclientsOverview(cloudspaceguid=<>,istemplate=<>,jobguid=<>,executionparams=<>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getAdministrationEnviromnentOverview(jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the administration environment overview page in cmc

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getAdministrationEnviromnentOverview(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getDevices(jobguid, executionparams)

    h4. Description
    
    
        Gets all non SMARTCLIENT devices

        
    
    

    h4.  Parameters
    

                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getDevices(jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getMachineRootJobsList(machineguid, joblimit, jobguid, executionparams)

    h4. Description
    
    
        Gets all root jobs from the specified machine

        
    
    

    h4.  Parameters
    

                * Machineguid (guid</para><para>@param joblimit             number of jobs to display @type joblimit              int) :          Guid of the machine
                * Joblimit () :              number of jobs to display
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getMachineRootJobsList(machineguid=<guid</para><para>@param joblimit             number of jobs to display @type joblimit              int>,joblimit=<>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getMachineDetails(machineguid, jobguid, executionparams)

    h4. Description
    
    
        Get information about a single machine
        
        
    
    

    h4.  Parameters
    

                * Machineguid (guid) :          Guid of the machine
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getMachineDetails(machineguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getPhysicalDisks(machineguid, jobguid, executionparams)

    h4. Description
    
    
        Get all physical disks for specified pmachine or all physical disks from the environment.
        
        
    
    

    h4.  Parameters
    

                * Machineguid (guid) :          Guid of the pmachine
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getPhysicalDisks(machineguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getRaidDeviceDetails(diskguid, jobguid, executionparams)

    h4. Description
    
    
        Retrieve RAID device details for specified disk (partition level).
        
        
    
    

    h4.  Parameters
    

                * Diskguid (guid) :             Guid of the disk
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getRaidDeviceDetails(diskguid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getVdcTemplates(cloudspaceGuid, jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load a vdc in cmc

        
    
    

    h4.  Parameters
    

                * Cloudspaceguid (guid) :       Guid of the cloudspace from which to get lans, machines and templates
                * Jobguid (guid) :              Guid of the job if available else empty string
                * Executionparams (dictionary) :      Dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_cmc.getVdcTemplates(cloudspaceGuid=<guid>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : 
Return type : 
    {noformat}
    h3.cmc.getVirtualDatacenterOverview(cloudspaceguid, jobguid, executionparams)

    h4. Description
    
    
        Gets all details needed to load the virtual datacenter overview page in cmc

        
    
    
        {note} Not yet implemented {note}
