h2. XMLRPC Cloud API DOC - dsspolicy

*Index :*

{toc:minLevel=3|maxLevel=3}

    h3.dsspolicy.getXMLSchema(dsspolicyguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XSD format of the dsspolicy rootobject structure.

        
    
    
        {note} Not yet implemented {note}
    h3.dsspolicy.create(name, storageNodes, storageSafety, minSbSize, maxSbSize, spreadLocations, resourceGroup, jobguid, executionparams)

    h4. Description
    
     
        creates a new dss policy

        
    
    

    h4.  Parameters
    

                * Name (string) :             policy name
                * Storagenodes (int) :     defines the minimum number of storage daemons in the spread
                * Storagesafety (int) : <no description found>
                * Minsbsize (int) :        the minimum size of a superblock in bytes (needs to be power of 2)
                * Maxsbsize (int) :        the maximum size of a superblock in bytes (needs to be power of 2)
                * Spreadlocations (array(guid)) :  specify a list of locations on which the data needs to be equally spread, array of datacenter guids
                * Resourcegroup (array(guid)) :    a resourcegroup is an array of pmachineguids that represent storage nodes
                * Jobguid (guid) :          guid of the job if available else empty string
                * Executionparams (dictionary) :  dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_dsspolicy.create(name=<string>,storageNodes=<int>,storageSafety=<int>,minSbSize=<int>,maxSbSize=<int>,spreadLocations=<array(guid)>,resourceGroup=<array(guid)>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with policyguid as result and jobguid: {'result': guid, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.dsspolicy.list(name, status, disksafetytype, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of dsspolicy guids which met the find criteria.

        
    
    

    h4.  Parameters
    

                * Name (string) :                        Name of the dss policy
                * Status (string) :                      Status of the policy
                * Disksafetytype (string) :              Disksafety type of the policy
                * Jobguid (guid) :                     guid of the job if available else empty string
                * Executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_dsspolicy.list(name=<string>,status=<string>,disksafetytype=<string>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with an array of policy guids as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.dsspolicy.getYAML(dsspolicyguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in YAML format of the dsspolicy rootobject.

        
    
    
        {note} Not yet implemented {note}
    h3.dsspolicy.getObject(rootobjectguid, jobguid, executionparams)

    h4. Description
    
    
        Gets the rootobject.

        
    
    

    h4.  Parameters
    

                * Rootobjectguid (guid) :     guid of the dsspolicy rootobject
                * Jobguid () : <no description found>
                * Executionparams (dictionary) :    dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_dsspolicy.getObject(rootobjectguid=<guid>,jobguid=<>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : rootobject
Return type : string
    {noformat}
    h3.dsspolicy.updateModelProperties(dsspolicyguid, status, jobguid, executionparams)

    h4. Description
    
    
        Updates the status of an dss policy
                                        
        
    
    

    h4.  Parameters
    

                * Dsspolicyguid (guid) :            Guid of the dsspolicyguid rootobject
                * Status (string) :                   Change the status attribute
                * Jobguid (guid) :                  guid of the job if available else empty string
                * Executionparams (dictionary) :          dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_dsspolicy.updateModelProperties(dsspolicyguid=<guid>,status=<string>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with a boolean as result and jobguid: {'result': True, 'jobguid': guid}
Return type : dictionary
    {noformat}
    h3.dsspolicy.getXML(dsspolicyguid, jobguid, executionparams)

    h4. Description
    
    
        Gets a string representation in XML format of the dsspolicy rootobject.

        
    
    
        {note} Not yet implemented {note}
    h3.dsspolicy.find(name, status, disksafetytype, storagesafety, storagewidth, jobguid, executionparams)

    h4. Description
    
    
        Returns a list of dsspolicy guids which met the find criteria.

        
    
    

    h4.  Parameters
    

                * Name (string) :                        Name of the dsspolicy
                * Status (string) :                      Status of the policy
                * Disksafetytype (string) :              Disksafety type of the policy (eg SSO,MIRRORCLOUD)
                * Storagesafety (int) :               Storage safety of the policy (nr of disks that can be lost without data loss)
                * Storagewidth (int) :                Storage width of the policy (nr of disks that data is spread amongst)
                * Jobguid (guid) :                     guid of the job if available else empty string
                * Executionparams (dictionary) :             dictionary of job specific params e.g. userErrormsg, maxduration ...
    
    h4. Python Example
    

            
            
            
            
            
            
            
    
    {code}
    import xmlrpclib
   
    xmlrpcProxy = xmlrpclib.ServerProxy('http://<name>:<password>@<environment url>:<port number>/appserver/xmlrpc)
    result=xmlrpcProxy.cloud_api_dsspolicy.find(name=<string>,status=<string>,disksafetytype=<string>,storagesafety=<int>,storagewidth=<int>,jobguid=<guid>,executionparams=<dictionary>))['result']
    {code}
        
    
    h4. Return
    
    {noformat:nopanel=true}
Return result : dictionary with an array of policy guids as result and jobguid: {'result': array, 'jobguid': guid}
Return type : dictionary
    {noformat}
