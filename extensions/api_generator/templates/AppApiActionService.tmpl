from pylabs import q, p
from actionservice import ActionService

class ${className}(ActionService):

#for $method in $methods:
#if $method.properties.get('execution_method', 'async').upper() != 'SYNC' and $wfe_amqp
    @q.manage.applicationserver.not_threaded
#end if
#if $method.properties.get('authenticate', 'False').upper() == 'TRUE'
    @q.manage.applicationserver.expose_authenticated
#else
    @q.manage.applicationserver.expose
#end if
#if 'authorize' in $method.properties
    @q.manage.applicationserver.expose_authorized($method.properties['authorize'])
#end if
    def $method.name (self, $method.args):
        """
        $method.docs
        """
#set $line = ','.join($method.argNames)
        result = p.api.action.${domain}.${className}.${method.name}($line)
#if $method.name == 'getObject'
        # Deserialize the pymodel object
        o = result
        result = {}
        import base64
        import pymodel
        if issubclass(o.__class__, pymodel.Model):
            serialized_result = o.serialize(pymodel.serializers.ThriftSerializer)
            encoded_result = base64.encodestring(serialized_result)
            result['result'] = encoded_result
        else:
            result['result'] = o
        return result
#else
        return result
#end if

#end for
